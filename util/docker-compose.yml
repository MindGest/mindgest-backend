version: "3.9"

services:
  test-db:
    image: postgres:14.5-alpine
    container_name: mindgest-test-db
    restart: unless-stopped
    env_file:
      - .env.test
    ports:
      - ${POSTGRES_PORT}:5432
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'"
        ]
      interval: 10s
      timeout: 3s
      retries: 3
    profiles:
      - testing
  db:
    image: postgres:14.5-alpine
    container_name: mindgest-db
    hostname: db
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - ${POSTGRES_PORT}:5432
    volumes:
      - ./data/:/var/lib/postgresql/data/
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'"
        ]
      interval: 10s
      timeout: 3s
      retries: 3
    networks:
      - mindgest-prod
    profiles:
      - prod
  api:
    image: mindgest-api:latest
    container_name: mindgest-api
    hostname: api
    build:
      context: ../api/
      dockerfile: Dockerfile
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    env_file:
      - ../api/.env
      - .env
    environment:
      DATABASE_URL: "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:${POSTGRES_PORT}/${POSTGRES_DB}?schema=public"
      HOST: 0.0.0.0
      PORT: 8080
    ports:
      - 8080:8080
    links:
      - db
    volumes:
      - ../api:/usr/src/mindgest
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "sh -c 'curl --fail http://localhost:8080/api/healthcheck || exit 1'"
        ]
      interval: 10s
      timeout: 3s
      retries: 3
    networks:
      - mindgest-prod
    profiles:
      - prod
  db-test:
    image: postgres:14.5-alpine
    container_name: mindgest-db-test
    hostname: test-db
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - ${POSTGRES_TEST_PORT}:5432
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'"
        ]
      interval: 10s
      timeout: 3s
      retries: 3
    profiles:
      - dev
    networks:
      - mindgest-dev

networks:
  mindgest-dev:
  mindgest-prod:
